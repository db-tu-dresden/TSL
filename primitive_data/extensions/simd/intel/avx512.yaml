---
description: "Definition of the SIMD TargetExtension avx512."
vendor: "intel"
extension_name: "avx512"
#todo: these are not all lscpu flags but a sample
lscpu_flags:
  - "avx512f"
  - "avx512bw"
  - "avx512cd"
  - "avx512dq"
  - "avx512er"
  - "avx512vl"
  - "avx512vbmi"
  - "avx512_vbmi2"
  - "avx512_fp16"
  - "avx512_vpopcntdq"
arch_flags:
  "avx512_fp16": "avx512fp16"
  "avx512_vpopcntdq": "avx512vpopcntdq"
  "avx512_vbmi2": "avx512vbmi2"
  "avx512_bitalg": "avx512bitalg"

includes: ['"immintrin.h"']
simdT_name: "avx512"
simdT_default_size_in_bits: 512
simdT_register_type_attributes: "__attribute__((__vector_size__(VectorSizeInBits/8),__may_alias__,__aligned__(VectorSizeInBits/8)))"
simdT_register_type: "BaseType"
simdT_mask_type: |-
   TSL_DEP_TYPE(
                     ( VectorSizeInBits == 512 ),
                     TSL_DEP_TYPE(
                        ( sizeof( BaseType ) ) == 1,
                        __mmask64,
                        TSL_DEP_TYPE(
                           ( sizeof( BaseType ) ) == 2,
                           __mmask32,
                           TSL_DEP_TYPE(
                              ( sizeof( BaseType ) ) == 4,
                              __mmask16,
                              __mmask8
                           )
                        )
                     ),
                     TSL_DEP_TYPE(
                        ( VectorSizeInBits == 256 ),
                        TSL_DEP_TYPE(
                           ( sizeof( BaseType ) ) == 1,
                           __mmask32,
                           TSL_DEP_TYPE(
                              ( sizeof( BaseType ) ) == 2,
                              __mmask16,
                              __mmask8
                           )
                        ),
                        TSL_DEP_TYPE(
                           ( sizeof( BaseType ) ) == 1,
                           __mmask16,
                           __mmask8
                        )
                     )
                  )
intrin_tp: {uint8_t: ["epu", 8], uint16_t: ["epu", 16], uint32_t: ["epu", 32], uint64_t: ["epu", 64], int8_t: ["epi", 8], int16_t: ["epi", 16], int32_t: ["epi", 32], int64_t: ["epi", 64], float: ["p", "s"], double: ["p", "d"]}
intrin_tp_full: {uint8_t: "epu8", uint16_t: "epu16", uint32_t: "epu32", uint64_t: "epu64", int8_t: "epi8", int16_t: "epi16", int32_t: "epi32", int64_t: "epi64", float: "ps", double: "pd"}
runtime_headers: ["cpu/include/tslCPUrt.hpp"]
...
